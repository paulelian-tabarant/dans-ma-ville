name: CI/CD

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  backend-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-backend-dependencies
      - name: Lint with ruff
        run: make lint

  backend-compile:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-backend-dependencies
      - name: Check code syntax and typing
        run: make compile

  backend-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-backend-dependencies
      - name: Run the app
        run: |
          make start &
          sleep 5
          curl -f http://127.0.0.1:8000/api/health || (echo "App failed to start" && exit 1)
          pkill -f "uvicorn"
        env:
          PORT: 8000
          HOST: 0.0.0.0

  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-backend-dependencies
      - name: Run tests
        run: make test

  frontend-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.17' # or whatever your project uses
      - uses: pnpm/action-setup@v2
        with:
          version: 10.9.0
      - name: Install dependencies
        run: pnpm install
      - name: Lint
        run: pnpm run lint

  frontend-compile:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.17' # or whatever your project uses
      - uses: pnpm/action-setup@v2
        with:
          version: 10.9.0
      - name: Install dependencies
        run: pnpm install
      - name: Compile with TypeScript
        run: pnpm run compile

  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.17'
      - uses: pnpm/action-setup@v2
        with:
          version: 10.9.0
      - name: Install dependencies
        run: pnpm install
      - name: Run unit tests
        run: pnpm run test

  frontend-upload-bundle:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.17'
      - uses: pnpm/action-setup@v2
        with:
          version: 10.9.0
      - name: Install dependencies
        run: pnpm install
      - name: Create frontend final bundle
        run: pnpm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-bundle
          path: frontend/dist/**/*

  deploy:
    needs: [
      backend-lint,
      backend-compile,
      backend-build,
      backend-test,
      frontend-lint,
      frontend-compile,
      frontend-test,
      frontend-upload-bundle
    ]
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'deploy-preview'))
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - uses: actions/checkout@v4

      - name: Clear and prepare static directory
        run: |
          rm -rf backend/static
          mkdir -p backend/static

      - name: Download frontend bundle to be served from the static directory
        uses: actions/download-artifact@v4
        with:
          name: frontend-bundle
          path: backend/static

      - name: Install Railway CLI
        run: curl -fsSL https://railway.app/install.sh | sh

      - name: Link and deploy
        id: deploy
        run: |
          cd backend
          
          #!/bin/bash
          
          retry_command() {
            local retries=$1
            shift
            local count=0
            until "$@"; do
              exit=$?
              count=$((count + 1))
              if [ $count -lt $retries ]; then
                echo "Attempt $count/$retries failed. Retrying in $((count * 2)) seconds..."
                sleep $((count * 2))
              else
                echo "Attempt $count/$retries failed. No more retries left."
                return $exit
              fi
            done
            return 0
          }
          
          retry_command 5 railway up --service ${{ secrets.RAILWAY_SERVICE_NAME }}
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
